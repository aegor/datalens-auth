version: "3.7"

services:
  pg-compeng:
    container_name: datalens-pg-compeng
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres

  control-api:
    container_name: datalens-control-api
    image: akrasnov87/datalens-control-api:0.2091.0
    environment:
      BI_API_UWSGI_WORKERS_COUNT: 4
      CONNECTOR_AVAILABILITY_VISIBLE: "clickhouse,postgres,chyt,ydb,mysql,greenplum"
      RQE_FORCE_OFF: 1
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      RQE_SECRET_KEY: ""
      US_HOST: "http://host.docker.internal:8083"
      US_MASTER_TOKEN: "fake-us-master-token"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"
    ports:
      - 8081:8080
    depends_on:
      - us
    volumes:
      - ./backend-configs:/etc/backend-configs
    extra_hosts:
      - "host.docker.internal:host-gateway"

  data-api:
    container_name: datalens-data-api
    image: ghcr.io/datalens-tech/datalens-data-api:0.2091.0
    environment:
      GUNICORN_WORKERS_COUNT: 5
      RQE_FORCE_OFF: 1
      CACHES_ON: 0
      MUTATIONS_CACHES_ON: 0
      RQE_SECRET_KEY: ""
      DL_CRY_ACTUAL_KEY_ID: key_1
      DL_CRY_KEY_VAL_ID_key_1: "h1ZpilcYLYRdWp7Nk8X1M1kBPiUi8rdjz9oBfHyUKIk="
      BI_COMPENG_PG_ON: 1
      BI_COMPENG_PG_URL: "postgresql://postgres:postgres@pg-compeng:5432/postgres"
      US_HOST: "http://host.docker.internal:8083"
      US_MASTER_TOKEN: "fake-us-master-token"
      CONFIG_PATH: "/etc/backend-configs/api.yaml"
    ports:
      - 8082:8080
    depends_on:
      - us
      - pg-compeng
    volumes:
      - ./backend-configs:/etc/backend-configs
    extra_hosts:
      - "host.docker.internal:host-gateway"

  pg-demo-connection:
    container_name: datalens-pg-demo-connection
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
    volumes:
      - ./pg-demo-connection/init:/docker-entrypoint-initdb.d
      - ./pg-demo-connection/data:/var/lib/postgresql/data

  pg-us:
    container_name: datalens-pg-us
    image: postgres:13-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: us-db-ci_purgeable
      POSTGRES_USER: us
      POSTGRES_PASSWORD: us
    volumes:
      - ./metadata:/var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  us:
    container_name: datalens-us
    image: akrasnov87/datalens-us:0.204.2
    depends_on:
      - pg-us
    environment:
      APP_INSTALLATION: "opensource"
      APP_ENV: "prod"
      MASTER_TOKEN: "fake-us-master-token"
      POSTGRES_DSN_LIST: ${METADATA_POSTGRES_DSN_LIST:-postgres://us:us@pg-us:5432/us-db-ci_purgeable}
      SKIP_INSTALL_DB_EXTENSIONS: ${METADATA_SKIP_INSTALL_DB_EXTENSIONS:-0}
      USE_DEMO_DATA: ${USE_DEMO_DATA:-1}
      PROJECT_ID: ${PROJECT_ID:-datalens-demo}
      HC: ${HC:-0}
      NODE_EXTRA_CA_CERTS: /certs/root.crt
      NODE_RPC_URL: ${NODE_RPC_URL:-http://us-auth/${AUTH_ENV:-demo}/rpc}
    ports:
      - "8083:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./certs:/certs

  us-auth:
    container_name: datalens-auth-${APP_ENV}
    image: akrasnov87/datalens-auth:0.1.2
    #ports:
    #  - "5000:80"
    environment:
      APP_ENV: ${AUTH_ENV:-demo}
      NODE_VPATH: /${AUTH_ENV:-demo}/
      CONNECT_STR: ${METADATA_POSTGRES_DSN_LIST:-postgres://us:us@pg-us:5432/us-db-ci_purgeable}
      PROJECT_ID: ${PROJECT_ID:-datalens-demo}
      NODE_THREAD: 2
      VERSION_CONTAINER: 0.1.2
      SOURCE_TYPES: ${SOURCE_TYPES:-.PG_TABLE.}
    extra_hosts:
      - "host.docker.internal:host-gateway"

  datalens:
    container_name: datalens-ui
    image: akrasnov87/datalens-ui:0.1675.1
    ports:
      - ${UI_PORT:-8080}:8080
    depends_on:
      - us
      - us-auth
      - control-api
      - data-api
      - pg-demo-connection
    environment:
      APP_MODE: "full"
      APP_ENV: "production"
      APP_INSTALLATION: "opensource"
      AUTH_POLICY: "disabled"
      US_ENDPOINT: "http://host.docker.internal:8083"
      BI_API_ENDPOINT: "http://host.docker.internal:8081"
      BI_DATA_ENDPOINT: "http://host.docker.internal:8082"
      NODE_EXTRA_CA_CERTS: "/usr/local/share/ca-certificates/cert.pem"
      HC: ${HC:-0}
    extra_hosts:
      - "host.docker.internal:host-gateway"
